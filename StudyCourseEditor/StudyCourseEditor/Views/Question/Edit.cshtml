@using StudyCourseEditor.Tools
@model StudyCourseEditor.Models.Question

@{
    ViewBag.Title = "Редактировать вопрос";
    var bestDifficulty = StatisticManager.GetQuestionBestDifficultyLevel(Model);
    
}

<h2>@ViewBag.Title</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/pages/answers.js")" type="text/javascript" ></script>
<script src="@Url.Content("~/Scripts/pages/questions.js")" type="text/javascript" ></script>



@using (Ajax.BeginForm(new AjaxOptions
                            {
                                OnSuccess = "QuestionEditSuccess",
                                OnFailure = "QuestionEditFailure",
                                HttpMethod = "POST"
                            })) {
    @Html.ValidationSummary(true)
    <fieldset>
        @Html.HiddenFor(model => model.ID)

        <div class="editor-label">
            @Html.LabelFor(model => model.Body)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Body)
            @Html.ValidationMessageFor(model => model.Body)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Difficulty)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Difficulty)
            @Html.ValidationMessageFor(model => model.Difficulty) // Оптимальный уровень сложности @(bestDifficulty). @Model.RightAttempts / @Model.TotalAttempts
        </div>
        
        <div>
            @Html.LabelFor(model => model.IsPublished)

            @Html.EditorFor(model => model.IsPublished)
            @Html.ValidationMessageFor(model => model.IsPublished)
        </div>

        @Html.DropDownListFor(model => model.QuestionTypeID, ViewBag.Types as SelectList) |
         @Ajax.ActionLink("Подсказка", "QuestionTypeAjaxHelp", "Question", new {typeId = 1}, new AjaxOptions
                                                                                              {
                                                                                                  OnSuccess = "HelpSuccess",
                                                                                                  OnFailure = "HelpFailure",
                                                                                                  HttpMethod = "GET",
                                                                                              }, new {id = "helpButton"})
        <div class="editor-field">
            @Html.Hidden("SubjectID", Model.SubjectID)
        </div>
        
        <div class="editor-field">
            @Html.Hidden("RightAttempts", Model.RightAttempts)
        </div>
        
        <div class="editor-field">
            @Html.Hidden("TotalAttempts", Model.TotalAttempts)
        </div>

        <p>
            <input type="submit" value="Сохранить" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("К списку вопросов", "Edit", "Subject", new {id = Model.SubjectID}, null)
</div>

<br/>


<div id="answers">
    <div id="existing-answers-placeholder">
 
        @foreach (var answer in Model.Answers)
        {
            <div id="answer_@(answer.ID)">
                @using (Ajax.BeginForm("Action", "Answer", new {id = answer.ID}, new AjaxOptions 
                                                                                       {
                                                                                           HttpMethod = "POST",
                                                                                           OnSuccess = "AnswerProcessSuccess",
                                                                                           OnFailure = "AnswerProcessFailed",

                                                                                       }))
                {
                    @Html.TextBox("Answer", answer.Body)
                    @Html.CheckBox("IsCorrect", answer.IsCorrect)
                    <input type="submit" name="Update" value=""/>
                    <input type="submit" name="Delete" value=""/>
                }
            </div>

        }
    </div>
    <div id="new-answer-placeholder">
    @using (Ajax.BeginForm("Action", "Answer", new { id = 0, questionID = Model.ID }, new AjaxOptions
                                                                                                               {
                                                                                                                   HttpMethod = "POST",
                                                                                                                   OnSuccess = "AnswerProcessSuccess",
                                                                                                                   OnFailure = "AnswerProcessFailed",

                                                                                                               }))
    {
        @Html.TextBox("Answer", "")
        @Html.CheckBox("IsCorrect", false)
        <input type="submit" name="Create" value=""/>
    }
    </div>
    
</div>


<div id="answer_template" style="display: none">
    @using (Ajax.BeginForm("Action", "Answer", new { id = "id_placeholder" }, new AjaxOptions
    {
        HttpMethod = "POST",
        OnSuccess = "AnswerProcessSuccess",
        OnFailure = "AnswerProcessFailed",

    }))
    {
        @Html.TextBox("Answer", "value_placeholder")
        @Html.CheckBox("IsCorrect", false)
        <input type="submit" name="Update" value=""/>
        <input type="submit" name="Delete" value=""/>
    }
</div>

